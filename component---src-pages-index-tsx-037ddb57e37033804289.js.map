{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Page","data","allMarkdownRemark","edges","map","edge","index","frontmatter","node","path","title","authors","key","to","pageQuery"],"mappings":"2FAAA,sFA8BeA,UArBmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACjC,OACI,oCACI,4CACA,4BACKA,EAAKC,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GACrC,IAAMC,EAAcF,EAAKG,KAAKD,YAC9B,IAAKA,EAAa,OAAO,KAFsB,IAGvCE,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QACrB,OACI,wBAAIC,IAAKH,UAAQH,GACb,kBAAC,OAAD,CAAMO,GAAIJ,GACLC,EADL,MACeC,EAAS,YAW7C,IAAMG,EAAY","file":"component---src-pages-index-tsx-037ddb57e37033804289.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport { IndexPageQuery } from '~/types/gatsby-graphql-types';\n\ninterface PageProps {\n    location: Location;\n    data: IndexPageQuery;\n}\nconst Page: React.FC<PageProps> = ({ data }) => {\n    return (\n        <>\n            <h1>LangDev Blog</h1>\n            <ul>\n                {data.allMarkdownRemark.edges.map((edge, index) => {\n                    const frontmatter = edge.node.frontmatter;\n                    if (!frontmatter) return null;\n                    const { path, title, authors } = frontmatter;\n                    return (\n                        <li key={path ?? index}>\n                            <Link to={path!}>\n                                {title} - {authors}{' '}\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\nexport default Page;\n\nexport const pageQuery = graphql`\n    query IndexPage {\n        allMarkdownRemark(sort: { fields: frontmatter___date }) {\n            edges {\n                node {\n                    frontmatter {\n                        path\n                        date\n                        title\n                        authors\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}